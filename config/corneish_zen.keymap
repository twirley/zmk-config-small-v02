#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | LWR | SHFT |   | SPC | RSE  | ALT |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    
   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI 
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH 
                  &kp LCTRL &mo 1 &kp LSHFT   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      
// |     |     |     |     |     |   |     |     |     |     |     |      
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans 
   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans 
 	        &kp LGUI     &trans       &trans      &trans      &trans     &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp STAR &kp LPAR &kp RPAR 
   &kp PLAY_PAUSE   &trans &trans   &trans   &trans      &kp MINUS &kp PLUS  &kp LBKT &kp RBKT &kp BSLH 
   &trans   &trans &trans   &trans   &trans      &kp UNDER &kp EQUAL &kp LBRC &kp RBRC &kp PIPE 
                &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };

combos {
            l_and_semi: combo {
                compatible = "zmk,combo";
                timeout-ms = <22>; // Adjust as needed
                bindings = <&kp L &kp SEMI>;
                label = "L + SEMI to Return";
                press = <&kp RET>;
            };
            combo_ctrl_bksp: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp J &kp K>;
        label = "JK to Ctrl+Backspace";
        press = <&kp LC(BSPC)>;
    };
    combo_ctrl_left: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp A &kp S>;
        label = "AS to Ctrl+Left";
        press = <&kp LC(LEFT)>;
    };
    combo_home_enter_up: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp DOT &kp FSLH>;
        label = "Period and Slash to Home+Enter+Up";
        press = <&kp HOME &kp RET &kp UP>;
    };

    // Continuation of combos
    combo_ctrl_right: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp D &kp F>;
        label = "DF to Ctrl+Right";
        press = <&kp LC(RIGHT)>;
    };

    combo_ctrl_z: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp Y &kp U>;
        label = "YU to Ctrl+Z";
        press = <&kp LC(Z)>;
    };

    combo_bksp: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp K &kp L>;
        label = "KL to Backspace";
        press = <&kp BSPC>;
    };

    combo_shift_home: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp H &kp J &kp K>;
        label = "HJK to Shift+Home";
        press = <&kp LS(HOME)>;
    };

    combo_esc: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp Q &kp W>;
        label = "QW to Escape";
        press = <&kp ESC>;
    };

    combo_ctrl_shift_z: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp Y &kp U &kp I>;
        label = "YUI to Ctrl+Shift+Z";
        press = <&kp LCS(Z)>;
    };

    combo_delete: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp H &kp J>;
        label = "HJ to Delete";
        press = <&kp DEL>;
    };

    combo_shift_end: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp J &kp K &kp L>;
        label = "JKL to Shift+End";
        press = <&kp LS(END)>;
    };

    combo_arrow_down: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp H &kp N>;
        label = "HN to Arrow Down";
        press = <&kp DOWN>;
    };

    combo_arrow_up: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp H &kp Y>;
        label = "HY to Arrow Up";
        press = <&kp UP>;
    };

    combo_tab: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp T &kp G>;
        label = "TG to Tab";
        press = <&kp TAB>;
    };

    combo_bracket_open: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp F &kp G>;
        label = "FG to [";
        press = <&kp LBKT>;
    };

    combo_quote: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp M &kp COMMA>;
        label = "M, to '";
        press = <&kp SQT>;
    };

    combo_pipe: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp X &kp C>;
        label = "XC to |";
        press = <&kp PIPE>;
    };

    combo_tilde: combo {
        compatible = "zmk,combo";
        timeout-ms = <22>;
        bindings = <&kp X &kp N>;
        label = "XN to ~";
        press = <&kp TILDE>;
    };


        };
};
